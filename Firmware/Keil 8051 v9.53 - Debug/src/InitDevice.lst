C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Pedro\G
                    -oogle Drive\UNICAMP\Mestrado\Firmware\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZ
                    -ZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Pedro\Google Drive\UNICAMP\Mestrado\Firmware\lib\ef
                    -m8sb1\cslib\serial_interface;C:\Users\Pedro\Google Drive\UNICAMP\Mestrado\Firmware\lib\efm8sb1\cslib\serial_interface_in
                    -c;C:\Users\Pedro\Google Drive\UNICAMP\Mestrado\Firmware\inc\config;C:\Users\Pedro\Google Drive\UNICAMP\Mestrado\Firmware
                    -\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Lib/efm8_capsense;C:/SiliconLabs/SimplicityStudio/v4
                    -/developer/sdks/8051/v4.1.7//Device/EFM8SB1/efm8_capsense/device_layer;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks
                    -/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8SB1/inc
                    -;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8SB1/efm8_capsense/serial_interface) PRINT(.\s
                    -rc\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8SB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          
  18          #include "cslib.h"
  19          // [Library Includes]$
  20          
  21          // =============================================================================
  22          // SiLabs_Startup
  23          // 
  24          // If SILABS_STARTUP=1 is defined as a Control Symbol in the Assembler
  25          // settings, this function will be called from SILABS_STARTUP.A51 immediately 
  26          // after a reset, before any variable initialization. This is primarily used to
  27          // disable the Watchdog Timer, in the case where it may trigger a reset when
  28          // the device is initializing a large amount of variables.
  29          // =============================================================================
  30          extern void SiLabs_Startup(void) {
  31   1              // $[SiLabs Startup]
  32   1              /*
  33   1               // WDTE (Watchdog Timer Enable) = DISABLED (Disable Watchdog Timer.)
  34   1               */
  35   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
  36   1      
  37   1              // [SiLabs Startup]$
  38   1      
  39   1      }
  40          
  41          //==============================================================================
  42          // enter_DefaultMode_from_RESET
  43          //==============================================================================
  44          extern void enter_DefaultMode_from_RESET(void) {
  45   1              // $[Config Calls]
  46   1              // Save the SFRPAGE
  47   1              uint8_t SFRPAGE_save = SFRPAGE;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 2   

  48   1              PCA_0_enter_DefaultMode_from_RESET();
  49   1              PCACH_2_enter_DefaultMode_from_RESET();
  50   1              VREG_0_enter_DefaultMode_from_RESET();
  51   1              PORTS_0_enter_DefaultMode_from_RESET();
  52   1              PORTS_1_enter_DefaultMode_from_RESET();
  53   1              PBCFG_0_enter_DefaultMode_from_RESET();
  54   1              HFOSC_0_enter_DefaultMode_from_RESET();
  55   1              RTC_0_enter_DefaultMode_from_RESET();
  56   1              CLOCK_0_enter_DefaultMode_from_RESET();
  57   1              TIMER01_0_enter_DefaultMode_from_RESET();
  58   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  59   1              CSLIB_0_enter_DefaultMode_from_RESET();
  60   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  61   1              // Restore the SFRPAGE
  62   1              SFRPAGE = SFRPAGE_save;
  63   1              // [Config Calls]$
  64   1      
  65   1      }
  66          
  67          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  68   1              // $[P0 - Port 0 Pin Latch]
  69   1              /***********************************************************************
  70   1               - P0.0 is low. Set P0.0 to drive low
  71   1               - P0.1 is high. Set P0.1 to drive or float high
  72   1               - P0.2 is high. Set P0.2 to drive or float high
  73   1               - P0.3 is high. Set P0.3 to drive or float high
  74   1               - P0.4 is high. Set P0.4 to drive or float high
  75   1               - P0.5 is high. Set P0.5 to drive or float high
  76   1               - P0.6 is high. Set P0.6 to drive or float high
  77   1               - P0.7 is high. Set P0.7 to drive or float high
  78   1               ***********************************************************************/
  79   1              P0 = P0_B0__LOW | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  80   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  81   1              // [P0 - Port 0 Pin Latch]$
  82   1      
  83   1              // $[P0MDOUT - Port 0 Output Mode]
  84   1              /***********************************************************************
  85   1               - P0.0 output is open-drain
  86   1               - P0.1 output is open-drain
  87   1               - P0.2 output is open-drain
  88   1               - P0.3 output is open-drain
  89   1               - P0.4 output is push-pull
  90   1               - P0.5 output is open-drain
  91   1               - P0.6 output is open-drain
  92   1               - P0.7 output is open-drain
  93   1               ***********************************************************************/
  94   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  95   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  96   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  97   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  98   1              // [P0MDOUT - Port 0 Output Mode]$
  99   1              P0MDOUT = P0MDOUT_B4__PUSH_PULL;
 100   1              // $[P0MDIN - Port 0 Input Mode]
 101   1              /***********************************************************************
 102   1               - P0.0 pin is configured for digital mode
 103   1               - P0.1 pin is configured for analog mode
 104   1               - P0.2 pin is configured for analog mode
 105   1               - P0.3 pin is configured for analog mode
 106   1               - P0.4 pin is configured for digital mode
 107   1               - P0.5 pin is configured for digital mode
 108   1               - P0.6 pin is configured for analog mode
 109   1               - P0.7 pin is configured for analog mode
 110   1               ***********************************************************************/
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 3   

 111   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__ANALOG | P0MDIN_B2__ANALOG
 112   1                              | P0MDIN_B3__ANALOG | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 113   1                              | P0MDIN_B6__ANALOG | P0MDIN_B7__ANALOG;
 114   1              // [P0MDIN - Port 0 Input Mode]$
 115   1      
 116   1              // $[P0SKIP - Port 0 Skip]
 117   1              /***********************************************************************
 118   1               - P0.0 pin is not skipped by the crossbar
 119   1               - P0.1 pin is skipped by the crossbar
 120   1               - P0.2 pin is skipped by the crossbar
 121   1               - P0.3 pin is skipped by the crossbar
 122   1               - P0.4 pin is not skipped by the crossbar
 123   1               - P0.5 pin is not skipped by the crossbar
 124   1               - P0.6 pin is skipped by the crossbar
 125   1               - P0.7 pin is skipped by the crossbar
 126   1               ***********************************************************************/
 127   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 128   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 129   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 130   1              // [P0SKIP - Port 0 Skip]$
 131   1      
 132   1              // $[P0MASK - Port 0 Mask]
 133   1              // [P0MASK - Port 0 Mask]$
 134   1      
 135   1              // $[P0MAT - Port 0 Match]
 136   1              /***********************************************************************
 137   1               - P0.0 pin logic value is compared with logic LOW
 138   1               - P0.1 pin logic value is compared with logic HIGH
 139   1               - P0.2 pin logic value is compared with logic HIGH
 140   1               - P0.3 pin logic value is compared with logic HIGH
 141   1               - P0.4 pin logic value is compared with logic HIGH
 142   1               - P0.5 pin logic value is compared with logic HIGH
 143   1               - P0.6 pin logic value is compared with logic HIGH
 144   1               - P0.7 pin logic value is compared with logic HIGH
 145   1               ***********************************************************************/
 146   1              P0MAT = P0MAT_B0__LOW | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 147   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 148   1              // [P0MAT - Port 0 Match]$
 149   1      
 150   1              // $[P0DRV - Port 0 Drive Strength]
 151   1              // [P0DRV - Port 0 Drive Strength]$
 152   1      
 153   1      }
 154          
 155          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 156   1              // $[P1 - Port 1 Pin Latch]
 157   1              // [P1 - Port 1 Pin Latch]$
 158   1      
 159   1              // $[P1MDOUT - Port 1 Output Mode]
 160   1              // [P1MDOUT - Port 1 Output Mode]$
 161   1              P1MDOUT = P0MDOUT_B1__PUSH_PULL;
 162   1              // $[P1MDIN - Port 0 Input Mode]
 163   1              // [P1MDIN - Port 0 Input Mode]$
 164   1      
 165   1              // $[P1SKIP - Port 1 Skip]
 166   1              /***********************************************************************
 167   1               - P1.0 pin is skipped by the crossbar
 168   1               - P1.1 pin is skipped by the crossbar
 169   1               - P1.2 pin is skipped by the crossbar
 170   1               - P1.3 pin is skipped by the crossbar
 171   1               - P1.4 pin is skipped by the crossbar
 172   1               - P1.5 pin is skipped by the crossbar
 173   1               - P1.6 pin is skipped by the crossbar
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 4   

 174   1               - P1.7 pin is skipped by the crossbar
 175   1               ***********************************************************************/
 176   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 177   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 178   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 179   1              // [P1SKIP - Port 1 Skip]$
 180   1      
 181   1              // $[P1MASK - Port 1 Mask]
 182   1              // [P1MASK - Port 1 Mask]$
 183   1      
 184   1              // $[P0MAT - Port 1 Match]
 185   1              // [P0MAT - Port 1 Match]$
 186   1      
 187   1              // $[P1DRV - Port 1 Drive Strength]
 188   1              // [P1DRV - Port 1 Drive Strength]$
 189   1      
 190   1              // $[P1MDIN - Port 1 Input Mode]
 191   1              /***********************************************************************
 192   1               - P1.0 pin is configured for analog mode
 193   1               - P1.1 pin is configured for analog mode
 194   1               - P1.2 pin is configured for analog mode
 195   1               - P1.3 pin is configured for analog mode
 196   1               - P1.4 pin is configured for analog mode
 197   1               - P1.5 pin is configured for digital mode
 198   1               - P1.6 pin is configured for analog mode
 199   1               - P1.7 pin is configured for analog mode
 200   1               ***********************************************************************/
 201   1              P1MDIN = P1MDIN_B0__ANALOG | P1MDIN_B1__ANALOG | P1MDIN_B2__ANALOG
 202   1                              | P1MDIN_B3__ANALOG | P1MDIN_B4__ANALOG | P1MDIN_B5__DIGITAL
 203   1                              | P1MDIN_B6__ANALOG | P1MDIN_B7__ANALOG;
 204   1              // [P1MDIN - Port 1 Input Mode]$
 205   1      
 206   1              // $[P1MAT - Port 1 Match]
 207   1              // [P1MAT - Port 1 Match]$
 208   1      
 209   1              // $[Missing Pin Skip]
 210   1              // [Missing Pin Skip]$
 211   1      
 212   1      }
 213          
 214          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 215   1              // $[XBR2 - Port I/O Crossbar 2]
 216   1              /***********************************************************************
 217   1               - Weak Pullups enabled 
 218   1               - Crossbar enabled
 219   1               ***********************************************************************/
 220   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 221   1              // [XBR2 - Port I/O Crossbar 2]$
 222   1              XBR2 = XBR2_XBARE__ENABLED;
 223   1              // $[XBR0 - Port I/O Crossbar 0]
 224   1              /***********************************************************************
 225   1               - UART TX, RX routed to Port pins P0.4 and P0.5
 226   1               - SPI I/O unavailable at Port pins
 227   1               - SMBus 0 I/O unavailable at Port pins
 228   1               - CP0 unavailable at Port pin
 229   1               - Asynchronous CP0 unavailable at Port pin
 230   1               - SYSCLK unavailable at Port pin
 231   1               ***********************************************************************/
 232   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 233   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED
 234   1                              | XBR0_SYSCKE__DISABLED;
 235   1              // [XBR0 - Port I/O Crossbar 0]$
 236   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 5   

 237   1              // $[XBR1 - Port I/O Crossbar 1]
 238   1              // [XBR1 - Port I/O Crossbar 1]$
 239   1      
 240   1      }
 241          
 242          extern void RTC_0_enter_DefaultMode_from_RESET(void) {
 243   1              // $[RTC Initialization]
 244   1              // [RTC Initialization]$
 245   1      
 246   1              // $[RTC0XCN0 - RTC Oscillator Control: Initial start-up setting]
 247   1              // [RTC0XCN0 - RTC Oscillator Control: Initial start-up setting]$
 248   1      
 249   1              // $[RTC0XCN - RTC Oscillator Control]
 250   1              /***********************************************************************
 251   1               - Self-Oscillate Mode selected
 252   1               - Disable AGC
 253   1               - Enable the Bias Double feature
 254   1               - LFOSC0 enabled and selected as RTC oscillator source
 255   1               ***********************************************************************/
 256   1              RTC0ADR = RTC0XCN0;
 257   1              RTC0DAT = RTC0XCN0_XMODE__SELF_OSCILLATE | RTC0XCN0_AGCEN__DISABLED
 258   1                              | RTC0XCN0_BIASX2__ENABLED | RTC0XCN0_LFOEN__ENABLED;
 259   1              while ((RTC0ADR & RTC0ADR_BUSY__BMASK) == RTC0ADR_BUSY__SET)
 260   1                      ;    //Poll Busy Bit
 261   1              // [RTC0XCN - RTC Oscillator Control]$
 262   1      
 263   1              // $[RTC0XCF - RTC Oscillator Configuration]
 264   1              // [RTC0XCF - RTC Oscillator Configuration]$
 265   1      
 266   1              // $[CAPTURE0 - RTC Timer Capture 0]
 267   1              // [CAPTURE0 - RTC Timer Capture 0]$
 268   1      
 269   1              // $[CAPTURE1 - RTC Timer Capture 1]
 270   1              // [CAPTURE1 - RTC Timer Capture 1]$
 271   1      
 272   1              // $[CAPTURE2 - RTC Timer Capture 2]
 273   1              // [CAPTURE2 - RTC Timer Capture 2]$
 274   1      
 275   1              // $[CAPTURE3 - RTC Timer Capture 3]
 276   1              // [CAPTURE3 - RTC Timer Capture 3]$
 277   1      
 278   1              // $[ALARM0 - RTC Alarm Programmed Value 0]
 279   1              /***********************************************************************
 280   1               - RTC Alarm Programmed Value 0 = 0x14
 281   1               ***********************************************************************/
 282   1              RTC0ADR = ALARM0;
 283   1              RTC0DAT = (0x14 << ALARM0_ALARM0__SHIFT);
 284   1              while ((RTC0ADR & RTC0ADR_BUSY__BMASK) == RTC0ADR_BUSY__SET)
 285   1                      ;    //Poll Busy Bit
 286   1              // [ALARM0 - RTC Alarm Programmed Value 0]$
 287   1      
 288   1              // $[ALARM1 - RTC Alarm Programmed Value 1]
 289   1              // [ALARM1 - RTC Alarm Programmed Value 1]$
 290   1      
 291   1              // $[ALARM2 - RTC Alarm Programmed Value 2]
 292   1              // [ALARM2 - RTC Alarm Programmed Value 2]$
 293   1      
 294   1              // $[ALARM3 - RTC Alarm Programmed Value 3]
 295   1              // [ALARM3 - RTC Alarm Programmed Value 3]$
 296   1      
 297   1              // $[RTC0CN - RTC Control]
 298   1              /***********************************************************************
 299   1               - Enable RTC oscillator
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 6   

 300   1               - RTC timer is stopped
 301   1               - Disable missing RTC detector
 302   1               - Disable RTC alarm
 303   1               - Alarm event flag is not set or disable the auto reset function
 304   1               - Do not start a capture operation
 305   1               - Do not start a set operation
 306   1               ***********************************************************************/
 307   1              RTC0ADR = RTC0CN0;
 308   1              RTC0DAT = RTC0CN0_RTC0EN__ENABLED | RTC0CN0_RTC0TR__STOP
 309   1                              | RTC0CN0_MCLKEN__DISABLED | RTC0CN0_RTC0AEN__DISABLED
 310   1                              | RTC0CN0_ALRM__NOT_SET | RTC0CN0_RTC0CAP__NOT_SET
 311   1                              | RTC0CN0_RTC0SET__NOT_SET;
 312   1              while ((RTC0ADR & RTC0ADR_BUSY__BMASK) == RTC0ADR_BUSY__SET)
 313   1                      ;    //Poll Busy Bit
 314   1      
 315   1              // [RTC0CN - RTC Control]$
 316   1      
 317   1              // $[External Oscillator Setup]
 318   1              // [External Oscillator Setup]$
 319   1      
 320   1      }
 321          
 322          extern void CSLIB_0_enter_DefaultMode_from_RESET(void) {
 323   1              // $[CSLIB Init]
 324   1      
 325   1              // -----------------------------------------------------------------------------
 326   1              // Configures all peripherals controlled by capsense, including the sensing block
 327   1              // and port pins
 328   1              // -----------------------------------------------------------------------------
 329   1              CSLIB_initHardware();
 330   1      
 331   1              // -----------------------------------------------------------------------------
 332   1              // Initializes capsense variables and performs some scans to initialize the
 333   1              // baselines
 334   1              // -----------------------------------------------------------------------------
 335   1              CSLIB_initLibrary();
 336   1      
 337   1              SCON0_TI = 1;     // Indicate UART ready for transmission
 338   1              // [CSLIB Init]$
 339   1      
 340   1      }
 341          
 342          extern void VREG_0_enter_DefaultMode_from_RESET(void) {
 343   1              // $[REG0CN - Voltage Regulator Control]
 344   1              /***********************************************************************
 345   1               - Enable the precision High Frequency Oscillator bias
 346   1               ***********************************************************************/
 347   1              REG0CN = REG0CN_OSCBIAS__ENABLED;
 348   1              // [REG0CN - Voltage Regulator Control]$
 349   1      
 350   1      }
 351          
 352          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 353   1              // $[HFO#CAL - High Frequency Oscillator Calibration]
 354   1              // [HFO#CAL - High Frequency Oscillator Calibration]$
 355   1      
 356   1              // $[HFO#CN - High Frequency Oscillator Control]
 357   1              /***********************************************************************
 358   1               - High Frequency Oscillator enabled
 359   1               ***********************************************************************/
 360   1              HFO0CN |= HFO0CN_IOSCEN__ENABLED;
 361   1              // [HFO#CN - High Frequency Oscillator Control]$
 362   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 7   

 363   1              // $[Oscillator Ready]
 364   1              while ((HFO0CN & HFO0CN_IFRDY__BMASK) == HFO0CN_IFRDY__NOT_SET)
 365   1                      ;
 366   1              // [Oscillator Ready]$
 367   1      
 368   1      }
 369          
 370          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 371   1              // $[CLKSEL - Clock Select]
 372   1              /***********************************************************************
 373   1               - SYSCLK is equal to selected clock source divided by 1
 374   1               - Clock derived from the internal precision High-Frequency Oscillator
 375   1               ***********************************************************************/
 376   1              CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC;
 377   1              // Wait for the clock to be ready
 378   1              while ((CLKSEL & CLKSEL_CLKRDY__BMASK) != CLKSEL_CLKRDY__SET)
 379   1                      ;
 380   1              // [CLKSEL - Clock Select]$
 381   1      
 382   1      }
 383          
 384          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 385   1              // $[Timer Initialization]
 386   1              //Save Timer Configuration
 387   1              uint8_t TCON_save;
 388   1              TCON_save = TCON;
 389   1              //Stop Timers
 390   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 391   1      
 392   1              // [Timer Initialization]$
 393   1      
 394   1              // $[TH0 - Timer 0 High Byte]
 395   1              // [TH0 - Timer 0 High Byte]$
 396   1      
 397   1              // $[TL0 - Timer 0 Low Byte]
 398   1              // [TL0 - Timer 0 Low Byte]$
 399   1      
 400   1              // $[TH1 - Timer 1 High Byte]
 401   1              /***********************************************************************
 402   1               - Timer 1 High Byte = 0x96
 403   1               ***********************************************************************/
 404   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 405   1              // [TH1 - Timer 1 High Byte]$
 406   1      
 407   1              // $[TL1 - Timer 1 Low Byte]
 408   1              /***********************************************************************
 409   1               - Timer 1 Low Byte = 0xFF
 410   1               ***********************************************************************/
 411   1              TL1 = (0xFF << TL1_TL1__SHIFT);
 412   1              // [TL1 - Timer 1 Low Byte]$
 413   1      
 414   1              // $[Timer Restoration]
 415   1              //Restore Timer Configuration
 416   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 417   1      
 418   1              // [Timer Restoration]$
 419   1      
 420   1      }
 421          
 422          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 423   1              // $[CKCON0 - Clock Control 0]
 424   1              /***********************************************************************
 425   1               - System clock divided by 12
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 8   

 426   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 427   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 428   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 429   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 430   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 431   1               - Timer 1 uses the system clock
 432   1               ***********************************************************************/
 433   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 434   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 435   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 436   1                              | CKCON0_T1M__SYSCLK;
 437   1              // [CKCON0 - Clock Control 0]$
 438   1      
 439   1              // $[TMOD - Timer 0/1 Mode]
 440   1              /***********************************************************************
 441   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 442   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 443   1               - Timer Mode
 444   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 445   1               - Timer Mode
 446   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 447   1               ***********************************************************************/
 448   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 449   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 450   1              // [TMOD - Timer 0/1 Mode]$
 451   1      
 452   1              // $[TCON - Timer 0/1 Control]
 453   1              /***********************************************************************
 454   1               - Start Timer 0 running
 455   1               - Start Timer 1 running
 456   1               ***********************************************************************/
 457   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 458   1              // [TCON - Timer 0/1 Control]$
 459   1      
 460   1      }
 461          
 462          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 463   1              // $[PCA0MD - PCA Mode]
 464   1              /***********************************************************************
 465   1               - Disable Watchdog Timer
 466   1               - System clock divided by 12
 467   1               - PCA continues to function normally while the system controller is in
 468   1               Idle Mode
 469   1               - Disable the CF interrupt
 470   1               - Disable Watchdog Timer
 471   1               - Watchdog Timer Enable unlocked
 472   1               ***********************************************************************/
 473   1              SFRPAGE = 0x00;
 474   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
 475   1              PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL
 476   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
 477   1                              | PCA0MD_WDLCK__UNLOCKED;
 478   1              // [PCA0MD - PCA Mode]$
 479   1      
 480   1              // $[PCA0H - PCA Counter/Timer High Byte]
 481   1              // [PCA0H - PCA Counter/Timer High Byte]$
 482   1      
 483   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 484   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 485   1      
 486   1              // $[PCA0PWM - PCA PWM Configuration]
 487   1              // [PCA0PWM - PCA PWM Configuration]$
 488   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 9   

 489   1              // $[PCA0CN0 - PCA Control 0]
 490   1              // [PCA0CN0 - PCA Control 0]$
 491   1      
 492   1      }
 493          
 494          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 495   1              // $[PCA0 Settings Save]
 496   1              // Select Capture/Compare register)
 497   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 498   1              // [PCA0 Settings Save]$
 499   1      
 500   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 501   1              /***********************************************************************
 502   1               - Disable negative edge capture
 503   1               - Disable CCF2 interrupts
 504   1               - Enable match function
 505   1               - 8 to 11-bit PWM selected
 506   1               - Disable positive edge capture
 507   1               - Disable comparator function
 508   1               - Disable PWM function
 509   1               - Disable toggle function
 510   1               ***********************************************************************/
 511   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 512   1                              | PCA0CPM2_MAT__ENABLED | PCA0CPM2_PWM16__8_BIT
 513   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__DISABLED
 514   1                              | PCA0CPM2_PWM__DISABLED | PCA0CPM2_TOG__DISABLED;
 515   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 516   1      
 517   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 518   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 519   1      
 520   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 521   1              PCA0CPH2 = 0x00;
 522   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 523   1      
 524   1              // $[Auto-reload]
 525   1              // [Auto-reload]$
 526   1      
 527   1              // $[PCA0 Settings Restore]
 528   1              // [PCA0 Settings Restore]$
 529   1      
 530   1      }
 531          
 532          extern void FLASH_0_enter_DefaultMode_from_RESET(void) {
 533   1      
 534   1      }
 535          
 536          //================================================================================
 537          // INTERRUPT_0_enter_DefaultMode_from_RESET
 538          //================================================================================
 539          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 540   1              // $[EIE1 - Extended Interrupt Enable 1]
 541   1              // [EIE1 - Extended Interrupt Enable 1]$
 542   1      
 543   1              // $[EIP1 - Extended Interrupt Priority 1]
 544   1              // [EIP1 - Extended Interrupt Priority 1]$
 545   1      
 546   1              // $[IE - Interrupt Enable]
 547   1              /***********************************************************************
 548   1               - Enable each interrupt according to its individual mask setting
 549   1               - Disable external interrupt 0
 550   1               - Disable external interrupt 1
 551   1               - Disable all SPI0 interrupts
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/15/2021 10:43:57 PAGE 10  

 552   1               - Enable interrupt requests generated by the TF0 flag
 553   1               - Disable all Timer 1 interrupt
 554   1               - Disable Timer 2 interrupt
 555   1               - Disable UART0 interrupt
 556   1               ***********************************************************************/
 557   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 558   1                              | IE_ESPI0__DISABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 559   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 560   1              // [IE - Interrupt Enable]$
 561   1      
 562   1              // $[IP - Interrupt Priority]
 563   1              // [IP - Interrupt Priority]$
 564   1      
 565   1              // $[EIE2 - Extended Interrupt Enable 2]
 566   1              // [EIE2 - Extended Interrupt Enable 2]$
 567   1      
 568   1              // $[EIP2 - Extended Interrupt Priority 2]
 569   1              // [EIP2 - Extended Interrupt Priority 2]$
 570   1      
 571   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    223    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
